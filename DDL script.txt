CREATE TABLE admin (
    admin_id  INTEGER NOT NULL,
    passcode1 VARCHAR2(256 CHAR)
);

ALTER TABLE admin ADD CONSTRAINT admin_pk PRIMARY KEY ( admin_id );

CREATE TABLE admin_vehicles (
    exch_id        INTEGER NOT NULL,
    model          VARCHAR2(256 CHAR),
    seats          INTEGER,
    mileage        VARCHAR2(256 CHAR),
    cvehicle_vid   INTEGER NOT NULL,
    engine         VARCHAR2(256 CHAR),
    price          INTEGER,
    admin_admin_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX admin_vehicles__idx ON
    admin_vehicles (
        cvehicle_vid
    ASC );

ALTER TABLE admin_vehicles ADD CONSTRAINT admin_vehicles_pk PRIMARY KEY ( exch_id );

CREATE TABLE booking (
    booking_id                 INTEGER NOT NULL,
    booking_date               VARCHAR2(256 CHAR),
    booking_type               VARCHAR2(256 CHAR) NOT NULL,
    motorbikes_manufacturer_id INTEGER NOT NULL,
    motorbikes_bike_id         INTEGER NOT NULL,
    cars_car_id                INTEGER NOT NULL,
    used_vehicles_uid          INTEGER NOT NULL
);

CREATE UNIQUE INDEX booking__idx ON
    booking (
        motorbikes_manufacturer_id
    ASC,
        motorbikes_bike_id
    ASC );

CREATE UNIQUE INDEX booking__idxv1 ON
    booking (
        used_vehicles_uid
    ASC );

CREATE UNIQUE INDEX booking__idxv2 ON
    booking (
        cars_car_id
    ASC );

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( booking_id );

CREATE TABLE cars (
    car_id                       INTEGER NOT NULL,
    car_model                    VARCHAR2(256 CHAR) NOT NULL,
    car_cost                     DATE,
    car_mileage                  INTEGER NOT NULL,
    car_engine                   VARCHAR2(256 CHAR),
    manufacturer_manufacturer_id INTEGER NOT NULL,
    car_price                    INTEGER,
    car_quantity                 INTEGER,
    admin_admin_id               INTEGER NOT NULL
);

ALTER TABLE cars ADD CONSTRAINT cars_pk PRIMARY KEY ( car_id );

CREATE TABLE creates_booking (
    customer_user_id   INTEGER NOT NULL,
    booking_booking_id INTEGER NOT NULL
);

ALTER TABLE creates_booking ADD CONSTRAINT creates_booking_pk PRIMARY KEY ( customer_user_id,
                                                                            booking_booking_id );

CREATE TABLE customer (
    password  VARCHAR2(256 CHAR),
    user_id   INTEGER NOT NULL,
    user_mail VARCHAR2(256 CHAR),
    user_name VARCHAR2(256 CHAR)
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( user_id );

CREATE TABLE cvehicle (
    vid              INTEGER NOT NULL,
    model            VARCHAR2(256 CHAR),
    seats            INTEGER,
    mileage          INTEGER,
    engine           VARCHAR2(256 CHAR),
    price            INTEGER,
    customer_user_id INTEGER NOT NULL,
    payable          INTEGER,
    payment_due      INTEGER
);

ALTER TABLE cvehicle ADD CONSTRAINT cvehicle_pk PRIMARY KEY ( vid );

CREATE TABLE feedbacks (
    feedback_id                INTEGER NOT NULL,
    description                VARCHAR2(256 CHAR),
    "Date"                     VARCHAR2(256 CHAR),
    motorbikes_manufacturer_id INTEGER NOT NULL,
    cars_car_id                INTEGER NOT NULL,
    motorbikes_bike_id         INTEGER NOT NULL,
    used_vehicles_uid          INTEGER NOT NULL,
    customer_user_id           INTEGER NOT NULL
);

ALTER TABLE feedbacks
    ADD CONSTRAINT feedbacks_pk PRIMARY KEY ( feedback_id,
                                              motorbikes_manufacturer_id,
                                              motorbikes_bike_id,
                                              cars_car_id );

CREATE TABLE manufacturer (
    manufacturer_id   INTEGER NOT NULL,
    manufacturer_name VARCHAR2(256 CHAR)
);

ALTER TABLE manufacturer ADD CONSTRAINT manufacturer_pk PRIMARY KEY ( manufacturer_id );

CREATE TABLE motorbikes (
    bike_id                      INTEGER NOT NULL,
    bike_model                   VARCHAR2(256 CHAR),
    weight                       INTEGER,
    mileage                      INTEGER,
    engine                       VARCHAR2(256 CHAR),
    manufacturer_manufacturer_id INTEGER NOT NULL,
    price                        INTEGER,
    quantity                     INTEGER,
    admin_admin_id               INTEGER NOT NULL
);

ALTER TABLE motorbikes ADD CONSTRAINT motorbikes_pk PRIMARY KEY ( manufacturer_manufacturer_id,
                                                                  bike_id );

CREATE TABLE payment (
    booking_booking_id INTEGER NOT NULL,
    payment_id         INTEGER NOT NULL,
    total_amount       INTEGER,
    bill_status        VARCHAR2(256 CHAR)
);

CREATE UNIQUE INDEX payment__idx ON
    payment (
        booking_booking_id
    ASC );

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( payment_id );

CREATE TABLE sales_record (
    product_id      INTEGER NOT NULL,
    sales_date      VARCHAR2(256 CHAR),
    cost_of_product VARCHAR2(256 CHAR),
    total_sold      INTEGER,
    admin_admin_id  INTEGER NOT NULL
);

ALTER TABLE sales_record ADD CONSTRAINT sales_record_pk PRIMARY KEY ( product_id );

CREATE TABLE test_drive (
    test_id                    VARCHAR2(256 CHAR) NOT NULL,
    duration                   VARCHAR2(256 CHAR) NOT NULL,
    "Date"                     VARCHAR2(256 CHAR),
    motorbikes_manufacturer_id INTEGER NOT NULL,
    cars_car_id                INTEGER NOT NULL,
    motorbikes_bike_id         INTEGER NOT NULL,
    used_vehicles_uid          INTEGER NOT NULL,
    customer_user_id           INTEGER NOT NULL
);

CREATE UNIQUE INDEX test_drive__idx ON
    test_drive (
        motorbikes_manufacturer_id
    ASC,
        motorbikes_bike_id
    ASC );

CREATE UNIQUE INDEX test_drive__idxv1 ON
    test_drive (
        cars_car_id
    ASC );

CREATE UNIQUE INDEX test_drive__idxv2 ON
    test_drive (
        used_vehicles_uid
    ASC );

ALTER TABLE test_drive ADD CONSTRAINT test_drive_pk PRIMARY KEY ( test_id,
                                                                  customer_user_id );

CREATE TABLE used_vehicles (
    "uid"                        INTEGER NOT NULL,
    used_model                   VARCHAR2(256 CHAR),
    used_seats                   INTEGER,
    used_mileage                 VARCHAR2(256),
    used_engine                  VARCHAR2(256 CHAR),
    manufacturer_manufacturer_id INTEGER NOT NULL,
    used_price                   INTEGER,
    used_quantity                INTEGER,
    admin_admin_id               INTEGER NOT NULL
);

ALTER TABLE used_vehicles ADD CONSTRAINT used_vehicles_pk PRIMARY KEY ( "uid" );

CREATE TABLE vehicle_sales (
    sales_id                   INTEGER NOT NULL,
    cost                       INTEGER NOT NULL,
    status                     VARCHAR2(256 CHAR),
    vehicle_id                 INTEGER NOT NULL,
    discount_offered           INTEGER,
    motorbikes_manufacturer_id INTEGER NOT NULL,
    cars_car_id                INTEGER NOT NULL,
    motorbikes_bike_id         INTEGER NOT NULL,
    used_vehicles_uid          INTEGER NOT NULL
);

CREATE UNIQUE INDEX vehicle_sales__idx ON
    vehicle_sales (
        motorbikes_manufacturer_id
    ASC,
        motorbikes_bike_id
    ASC );

CREATE UNIQUE INDEX vehicle_sales__idxv1 ON
    vehicle_sales (
        cars_car_id
    ASC );

CREATE UNIQUE INDEX vehicle_sales__idxv2 ON
    vehicle_sales (
        used_vehicles_uid
    ASC );

ALTER TABLE vehicle_sales ADD CONSTRAINT vehicle_sales_pk PRIMARY KEY ( sales_id );

ALTER TABLE admin_vehicles
    ADD CONSTRAINT admin_vehicles_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE admin_vehicles
    ADD CONSTRAINT admin_vehicles_cvehicle_fk FOREIGN KEY ( cvehicle_vid )
        REFERENCES cvehicle ( vid );

ALTER TABLE booking
    ADD CONSTRAINT booking_cars_fk FOREIGN KEY ( cars_car_id )
        REFERENCES cars ( car_id );

ALTER TABLE booking
    ADD CONSTRAINT booking_motorbikes_fk FOREIGN KEY ( motorbikes_manufacturer_id,
                                                       motorbikes_bike_id )
        REFERENCES motorbikes ( manufacturer_manufacturer_id,
                                bike_id );

ALTER TABLE booking
    ADD CONSTRAINT booking_used_vehicles_fk FOREIGN KEY ( used_vehicles_uid )
        REFERENCES used_vehicles ( "uid" );

ALTER TABLE cars
    ADD CONSTRAINT cars_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE cars
    ADD CONSTRAINT cars_manufacturer_fk FOREIGN KEY ( manufacturer_manufacturer_id )
        REFERENCES manufacturer ( manufacturer_id );

ALTER TABLE creates_booking
    ADD CONSTRAINT creates_booking_booking_fk FOREIGN KEY ( booking_booking_id )
        REFERENCES booking ( booking_id );

ALTER TABLE creates_booking
    ADD CONSTRAINT creates_booking_customer_fk FOREIGN KEY ( customer_user_id )
        REFERENCES customer ( user_id );

ALTER TABLE cvehicle
    ADD CONSTRAINT cvehicle_customer_fk FOREIGN KEY ( customer_user_id )
        REFERENCES customer ( user_id );

ALTER TABLE feedbacks
    ADD CONSTRAINT feedbacks_cars_fk FOREIGN KEY ( cars_car_id )
        REFERENCES cars ( car_id );

ALTER TABLE feedbacks
    ADD CONSTRAINT feedbacks_customer_fk FOREIGN KEY ( customer_user_id )
        REFERENCES customer ( user_id );

ALTER TABLE feedbacks
    ADD CONSTRAINT feedbacks_motorbikes_fk FOREIGN KEY ( motorbikes_manufacturer_id,
                                                         motorbikes_bike_id )
        REFERENCES motorbikes ( manufacturer_manufacturer_id,
                                bike_id );

ALTER TABLE feedbacks
    ADD CONSTRAINT feedbacks_used_vehicles_fk FOREIGN KEY ( used_vehicles_uid )
        REFERENCES used_vehicles ( "uid" );

ALTER TABLE motorbikes
    ADD CONSTRAINT motorbikes_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE motorbikes
    ADD CONSTRAINT motorbikes_manufacturer_fk FOREIGN KEY ( manufacturer_manufacturer_id )
        REFERENCES manufacturer ( manufacturer_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_booking_fk FOREIGN KEY ( booking_booking_id )
        REFERENCES booking ( booking_id );

ALTER TABLE sales_record
    ADD CONSTRAINT sales_record_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE test_drive
    ADD CONSTRAINT test_drive_cars_fk FOREIGN KEY ( cars_car_id )
        REFERENCES cars ( car_id );

ALTER TABLE test_drive
    ADD CONSTRAINT test_drive_customer_fk FOREIGN KEY ( customer_user_id )
        REFERENCES customer ( user_id );

ALTER TABLE test_drive
    ADD CONSTRAINT test_drive_motorbikes_fk FOREIGN KEY ( motorbikes_manufacturer_id,
                                                          motorbikes_bike_id )
        REFERENCES motorbikes ( manufacturer_manufacturer_id,
                                bike_id );

ALTER TABLE test_drive
    ADD CONSTRAINT test_drive_used_vehicles_fk FOREIGN KEY ( used_vehicles_uid )
        REFERENCES used_vehicles ( "uid" );

ALTER TABLE used_vehicles
    ADD CONSTRAINT used_vehicles_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE used_vehicles
    ADD CONSTRAINT used_vehicles_manufacturer_fk FOREIGN KEY ( manufacturer_manufacturer_id )
        REFERENCES manufacturer ( manufacturer_id );

ALTER TABLE vehicle_sales
    ADD CONSTRAINT vehicle_sales_cars_fk FOREIGN KEY ( cars_car_id )
        REFERENCES cars ( car_id );

ALTER TABLE vehicle_sales
    ADD CONSTRAINT vehicle_sales_motorbikes_fk FOREIGN KEY ( motorbikes_manufacturer_id,
                                                             motorbikes_bike_id )
        REFERENCES motorbikes ( manufacturer_manufacturer_id,
                                bike_id );

ALTER TABLE vehicle_sales
    ADD CONSTRAINT vehicle_sales_used_vehicles_fk FOREIGN KEY ( used_vehicles_uid )
        REFERENCES used_vehicles ( "uid" );
